{"version":3,"sources":["Bricks/index.js","App.js","index.js"],"names":["getWidth","document","documentElement","clientWidth","Brick","props","imgSrc","gap","colWidth","useState","imgHeight","setImgHeight","hovering","setHovering","imgLoaded","setImgLoaded","itemRef","useRef","imgRef","useEffect","window","dispatchEvent","Event","ratio","current","naturalWidth","naturalHeight","handleHover","ref","className","onMouseEnter","onMouseLeave","style","width","height","marginBottom","src","alt","onLoad","Bricks","data","columns","minWidth","backgroundColor","layoutWidth","setLayoutWidth","setColWidth","handleResize","addEventListener","removeEventListener","minColumns","Math","floor","ceil","columnGap","map","item","i","key","App","setColumns","setGap","setMinWidth","setBackgroundColor","handleChange","target","value","name","parseInt","console","log","htmlFor","type","onChange","href","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.925c2ee1.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction getWidth() {\r\n  return document.documentElement.clientWidth;\r\n}\r\n\r\nconst Brick = (props) => {\r\n  const { imgSrc, gap, colWidth } = props;\r\n  const [imgHeight, setImgHeight] = useState(10);\r\n  const [hovering, setHovering] = useState(false);\r\n  const [imgLoaded, setImgLoaded] = useState(false);\r\n\r\n  const itemRef = useRef();\r\n  const imgRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (imgLoaded === true) {\r\n      window.dispatchEvent(new Event(\"resize\"));\r\n      const ratio = imgRef.current.naturalWidth / colWidth;\r\n      setImgHeight(imgRef.current.naturalHeight / ratio);\r\n    }\r\n  }, [imgLoaded, colWidth]);\r\n\r\n  const handleHover = () => {\r\n    setHovering(!hovering);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={itemRef}\r\n      className={`brick${hovering ? \" hovering\" : \"\"}`}\r\n      onMouseEnter={handleHover}\r\n      onMouseLeave={handleHover}\r\n      style={{\r\n        width: `${colWidth - gap}px`,\r\n        height: `${imgHeight}px`,\r\n        marginBottom: `${gap}px`,\r\n      }}\r\n    >\r\n      <img\r\n        src={imgSrc}\r\n        alt=\"\"\r\n        ref={imgRef}\r\n        onLoad={() => setImgLoaded(true)}\r\n        width={colWidth - gap}\r\n        height={imgHeight}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Bricks = (props) => {\r\n  const {\r\n    data,\r\n    columns = 4,\r\n    gap = 0,\r\n    minWidth = 200,\r\n    backgroundColor = \"white\",\r\n  } = props;\r\n\r\n  const [layoutWidth, setLayoutWidth] = useState(getWidth);\r\n  const [colWidth, setColWidth] = useState(0);\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setLayoutWidth(getWidth());\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const minColumns = Math.floor(layoutWidth / minWidth);\r\n    minColumns < columns\r\n      ? setColWidth(Math.ceil(layoutWidth / minColumns))\r\n      : setColWidth(Math.ceil(layoutWidth / columns));\r\n  }, [layoutWidth, columns, minWidth]);\r\n\r\n  return (\r\n    <div\r\n      className=\"bricksContainer\"\r\n      style={{\r\n        backgroundColor: backgroundColor,\r\n        columns: `${columns} ${minWidth}px`,\r\n        columnGap: `${gap}px`,\r\n      }}\r\n    >\r\n      {data &&\r\n        data.map((item, i) => (\r\n          <Brick key={i} {...item} gap={gap} colWidth={colWidth} />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction minimumValPropTest(props, propName, componentName) {\r\n  if (props[propName]) {\r\n    let value = props[propName];\r\n    switch (propName) {\r\n      case \"columns\":\r\n        return value > 0\r\n          ? null\r\n          : new Error(\r\n              `${propName} in ${componentName} requires a value greater than 0`\r\n            );\r\n      case \"gap\":\r\n        return value > -1\r\n          ? null\r\n          : new Error(\r\n              `${propName} in ${componentName} requires a value of 0 or greater`\r\n            );\r\n      case \"minWidth\":\r\n        return value > 0\r\n          ? null\r\n          : new Error(\r\n              `${propName} in ${componentName} requires a value greater than 0`\r\n            );\r\n      default:\r\n        new Error(`Invalid prop ${propName} passed to ${componentName}`);\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nBricks.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      imgSrc: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n  columns: minimumValPropTest,\r\n  gap: minimumValPropTest,\r\n  minWidth: minimumValPropTest,\r\n  backgroundColor: PropTypes.string,\r\n};\r\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport { Bricks } from \"./Bricks/index\";\n\nfunction App() {\n  // data,\n  // columns = 4,\n  // gap = 0,\n  // minWidth = 200,\n  // backgroundColor = \"white\",\n  const [columns, setColumns] = useState(4);\n  const [gap, setGap] = useState(0);\n  const [minWidth, setMinWidth] = useState(200);\n  const [backgroundColor, setBackgroundColor] = useState(\"white\");\n  const [data, setData] = useState([\n    {\n      imgSrc: \"https://source.unsplash.com/random/1\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/2\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/3\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/4\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/5\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/6\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/7\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/8\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/9\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/10\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/11\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/12\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/13\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/14\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/15\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/16\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/17\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/18\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/19\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/20\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/21\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/22\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/23\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/24\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/25\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/26\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/27\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/28\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/29\",\n    },\n    {\n      imgSrc: \"https://source.unsplash.com/random/30\",\n    },\n  ]);\n\n  const handleChange = ({ target }) => {\n    let value = target.value;\n    switch (target.name) {\n      case \"columns\":\n        if (value < 1) value = 1;\n        setColumns(parseInt(value) || 4);\n        break;\n      case \"gap\":\n        if (value < 0) value = 0;\n        setGap(parseInt(value) || 0);\n        break;\n      case \"minWidth\":\n        if (value < 1) value = 1;\n        setMinWidth(parseInt(value) || 200);\n        break;\n      case \"color\":\n        setBackgroundColor(value);\n        break;\n      default:\n        console.log(\"Invalid target\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"col form\">\n          <p>\n            <label htmlFor=\"columns\">Columns</label>\n            <input\n              type=\"number\"\n              name=\"columns\"\n              value={columns}\n              onChange={handleChange}\n            />\n            <span>Default: 4 Minimum: 1</span>\n          </p>\n          <p>\n            <label htmlFor=\"gap\">Gap</label>\n            <input\n              type=\"number\"\n              name=\"gap\"\n              value={gap}\n              onChange={handleChange}\n            />\n            <span>Default: 0 Minimum: 0</span>\n          </p>\n          <p>\n            <label htmlFor=\"minWidth\">Min Width</label>\n            <input\n              type=\"number\"\n              name=\"minWidth\"\n              value={minWidth}\n              onChange={handleChange}\n            />\n            <span>Default: 200 Minimum: 1</span>\n          </p>\n          <p>\n            <label htmlFor=\"color\">Background Color</label>\n            <input\n              type=\"text\"\n              name=\"color\"\n              value={backgroundColor}\n              onChange={handleChange}\n            />\n            <span>\n              Supports named colors (e.g. red, green, blue etc) or hex value\n              (e.g. #ffffff)\n            </span>\n          </p>\n        </div>\n        <div className=\"col\">\n          <p>The below code snippet shows the component in use</p>\n          <p>{`<Bricks data={data} columns={${columns}} gap={${gap}} minWidth={${minWidth}} backgroundColor={${backgroundColor}} />`}</p>\n          <p>\n            Photos from{\" \"}\n            <a href=\"https://source.unsplash.com/\" target=\"blank\">\n              Unsplash Source\n            </a>\n          </p>\n          <p>\n            Check out the code{\" \"}\n            <a\n              href=\"https://github.com/MickyBizzle/react-responsive-bricks\"\n              target=\"blank\"\n            >\n              here\n            </a>\n          </p>\n        </div>\n      </div>\n      <Bricks\n        data={data}\n        columns={columns}\n        gap={gap}\n        minWidth={minWidth}\n        backgroundColor={backgroundColor}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}